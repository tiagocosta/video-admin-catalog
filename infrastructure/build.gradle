buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:10.20.0'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '10.20.0'
}

group = 'com.tcs.admin.catalog.infrastructure'
version = '1.0-SNAPSHOT'

bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation 'com.google.cloud:google-cloud-storage:2.49.0'
    implementation 'com.google.protobuf:protobuf-java:3.25.6'
    implementation 'com.google.guava:guava:33.4.0-jre'

    implementation('mysql:mysql-connector-java:8.0.33')
    implementation 'io.vavr:vavr:0.10.6'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    implementation('org.springframework.boot:spring-boot-starter-web'){
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-amqp')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.flywaydb:flyway-mysql')
    testImplementation('org.springframework.amqp:spring-rabbit-test:3.2.2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testImplementation('org.springframework.boot:spring-boot-testcontainers')
    testImplementation('org.testcontainers:junit-jupiter')
    testImplementation('org.testcontainers:mysql')

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    runtimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/videos_adm'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

test {
    useJUnitPlatform()
}